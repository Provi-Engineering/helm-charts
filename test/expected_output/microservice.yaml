---
# Source: my-cool-app/templates/microservice.yaml.tpl
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dummy
  annotations:
    provi.repository: https://github.com/example/repo
    provi.slack: my-cool-team
    eks.amazonaws.com/role-arn: "arn:aws:iam::123456789:role/dummy"
    eks.amazonaws.com/sts-regional-endpoints: "true"
  labels:
    app.kubernetes.io/name: dummy
    chart: my-cool-app
    chartVersion: 1.0.0
    team: cool-team
---
# Source: my-cool-app/templates/microservice.yaml.tpl
apiVersion: v1
kind: ConfigMap
metadata:
  name: testmap
  annotations:
    provi.repository: https://github.com/example/repo
    provi.slack: my-cool-team
  labels:
    app.kubernetes.io/name: dummy
    chart: my-cool-app
    chartVersion: 1.0.0
    team: cool-team
data:
  foo: "bar"
  number: "1"
  properties: "fruit.type=banana\n"
---
# Source: my-cool-app/templates/microservice.yaml.tpl
apiVersion: v1
kind: Service
metadata:
  name: web
  annotations:
    provi.repository: https://github.com/example/repo
    provi.slack: my-cool-team
  labels:
    app: web
    app.kubernetes.io/name: dummy
    chart: my-cool-app
    chartVersion: 1.0.0
    team: cool-team
spec:
  selector:
    selector: my-cool-app-deployment-web
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
---
# Source: my-cool-app/templates/microservice.yaml.tpl
apiVersion: v1
kind: Service
metadata:
  name: worker
  annotations:
    provi.repository: https://github.com/example/repo
    provi.slack: my-cool-team
  labels:
    app: worker
    app.kubernetes.io/name: dummy
    chart: my-cool-app
    chartVersion: 1.0.0
    team: cool-team
spec:
  selector:
    selector: my-cool-app-statefulset-worker
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
---
# Source: my-cool-app/templates/microservice.yaml.tpl
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  annotations:
    provi.repository: https://github.com/example/repo
    provi.slack: my-cool-team
  labels:
    app: web
    app.kubernetes.io/name: dummy
    chart: my-cool-app
    chartVersion: 1.0.0
    team: cool-team
spec:
  selector:
    matchLabels:
      selector: my-cool-app-deployment-web
  template:
    metadata:
      annotations:
        provi.repository: https://github.com/example/repo
        provi.slack: my-cool-team
      labels:
        selector: my-cool-app-deployment-web
        app: web
        app.kubernetes.io/name: dummy
        chart: my-cool-app
        chartVersion: 1.0.0
        team: cool-team
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: "dummy"
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: "dummy"
      serviceAccountName: dummy
      automountServiceAccountToken: true
      tolerations:
        - key: "spot"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "search-admin"
          operator: "Exists"
          effect: "NoSchedule"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        - name: app
          image: docker.io/image:abcd1234
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: false
          env:
            - name: RACK_ENV
              value: "production"
            - name: RAILS_ENV
              value: "production"
          envFrom:
            - secretRef:
                name: dummy
          livenessProbe:
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 5
            successThreshold: 1
            httpGet:
              path: /
              port: 8080
          resources:
            limits:
              memory: 256Mi
              ephemeral-storage: 200Mi
              cpu: 1
            requests:
              cpu: 250m
              memory: 256Mi
              ephemeral-storage: 200Mi
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: In
                    values:
                      - karpenter
---
# Source: my-cool-app/templates/microservice.yaml.tpl
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: web
spec:
  minReplicas: 3
  maxReplicas: 6
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
---
# Source: my-cool-app/templates/microservice.yaml.tpl
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: worker
  annotations:
    provi.repository: https://github.com/example/repo
    provi.slack: my-cool-team
  labels:
    app: worker
    app.kubernetes.io/name: dummy
    chart: my-cool-app
    chartVersion: 1.0.0
    team: cool-team
spec:
  serviceName: worker
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      selector: my-cool-app-statefulset-worker
  template:
    metadata:
      annotations:
        provi.repository: https://github.com/example/repo
        provi.slack: my-cool-team
      labels:
        selector: my-cool-app-statefulset-worker
        app: worker
        app.kubernetes.io/name: dummy
        chart: my-cool-app
        chartVersion: 1.0.0
        team: cool-team
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: "dummy"
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: "dummy"
      serviceAccountName: dummy
      automountServiceAccountToken: true
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        - name: app
          image: docker.io/image:abcd1234
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: false
          env:
            - name: HELLO
              value: "world"
            - name: RACK_ENV
              value: "production"
            - name: RAILS_ENV
              value: "production"
          envFrom:
            - secretRef:
                name: dummy
          resources:
            limits:
              memory: 256Mi
              cpu: 1
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - mountPath: /data
              name: data
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: In
                    values:
                      - karpenter
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
# Source: my-cool-app/templates/microservice.yaml.tpl
apiVersion: batch/v1
kind: CronJob
metadata:
  name: scheduler
  annotations:
    provi.repository: https://github.com/example/repo
    provi.slack: my-cool-team
  labels:
    app: scheduler
    app.kubernetes.io/name: dummy
    chart: my-cool-app
    chartVersion: 1.0.0
    team: cool-team
spec:
  timeZone: Etc/UTC
  suspend: false
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 5
  successfulJobsHistoryLimit: 5
  schedule: "0 * * * *"
  jobTemplate:
    spec:
      backoffLimit: 1
      completions: 1
      parallelism: 1
      template:
        metadata:
          annotations:
            provi.repository: https://github.com/example/repo
            provi.slack: my-cool-team
          labels:
            selector: my-cool-app-cronjob-scheduler
            app: scheduler
            app.kubernetes.io/name: dummy
            chart: my-cool-app
            chartVersion: 1.0.0
            team: cool-team
        spec:
          automountServiceAccountToken: false
          restartPolicy: Never
          terminationGracePeriodSeconds: 30
          containers:
            - name: schedule
              image: docker.io/image:abcd1234
              imagePullPolicy: Always
              command:
                - date
              securityContext:
                runAsNonRoot: false
              env:
                - name: RACK_ENV
                  value: "production"
                - name: RAILS_ENV
                  value: "production"
              envFrom:
                - secretRef:
                    name: dummy
              resources:
                limits:
                  memory: 256Mi
                  cpu: 1
                requests:
                  cpu: 100m
                  memory: 256Mi
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: type
                        operator: In
                        values:
                          - karpenter
---
# Source: my-cool-app/templates/microservice.yaml.tpl
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dummy
  annotations:
    external-dns.alpha.kubernetes.io/hostname: dummy.example.com
    nginx.ingress.kubernetes.io/auth-signin: https://auth.example.com/oauth2/start?rd=https://$host$uri
    nginx.ingress.kubernetes.io/auth-url: https://auth.example.com/oauth2/auth
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    provi.repository: https://github.com/example/repo
    provi.slack: my-cool-team
    external-dns.alpha.kubernetes.io/ttl: "10"
  labels:
    app.kubernetes.io/name: dummy
    chart: my-cool-app
    chartVersion: 1.0.0
    team: cool-team
spec:
  ingressClassName: nginx-internal
  rules:
    - host: "dummy.example.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web
                port:
                  number: 8080
    - host: "dummy2.example.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web
                port:
                  number: 8080
---
# Source: my-cool-app/templates/microservice.yaml.tpl
apiVersion: batch/v1
kind: Job
metadata:
  name: migrations
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "0"
    provi.repository: https://github.com/example/repo
    provi.slack: my-cool-team
  labels:
    app: migrations
    app.kubernetes.io/name: dummy
    chart: my-cool-app
    chartVersion: 1.0.0
    team: cool-team
spec:
  backoffLimit: 1
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: hook-succeeded
        helm.sh/hook-weight: "0"
        provi.repository: https://github.com/example/repo
        provi.slack: my-cool-team
      labels:
        selector: my-cool-app-job-migrations
        app: migrations
        app.kubernetes.io/name: dummy
        chart: my-cool-app
        chartVersion: 1.0.0
        team: cool-team
    spec:
      automountServiceAccountToken: false
      restartPolicy: Never
      terminationGracePeriodSeconds: 30
      containers:
        - name: migrate
          image: docker.io/image:abcd1234
          imagePullPolicy: Always
          command:
            - uptime
          securityContext:
            runAsNonRoot: false
          env:
            - name: RACK_ENV
              value: "production"
            - name: RAILS_ENV
              value: "production"
          envFrom:
            - secretRef:
                name: dummy
          resources:
            limits:
              memory: 256Mi
              cpu: 1
            requests:
              cpu: 100m
              memory: 256Mi
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: In
                    values:
                      - karpenter
