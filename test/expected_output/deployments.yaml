---
# Source: defaults/templates/microservice.yaml.tpl
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-deployments
  annotations:
    provi.repository: https://github.com/example/repo
    eks.amazonaws.com/role-arn: "arn:aws:iam::123456789:role/test-deployments"
    eks.amazonaws.com/sts-regional-endpoints: "true"
  labels:
    chart: defaults
    chartVersion: 1.0.0
    team: cool-team
---
# Source: defaults/templates/microservice.yaml.tpl
apiVersion: v1
kind: Service
metadata:
  name: web
  annotations:
    provi.repository: https://github.com/example/repo
  labels:
    app: web
    chart: defaults
    chartVersion: 1.0.0
    team: cool-team
spec:
  selector:
    selector: defaults-deployment-web
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
---
# Source: defaults/templates/microservice.yaml.tpl
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  annotations:
    provi.repository: https://github.com/example/repo
    test.override.annotation: hello-override-world
  labels:
    app: web
    chart: defaults
    chartVersion: 1.0.0
    team: cool-team
    testOverrideLabel: hello-override-world
spec:
  selector:
    matchLabels:
      selector: defaults-deployment-web
  strategy:
    Recreate
  template:
    metadata:
      annotations:
        provi.repository: https://github.com/example/repo
        test.override.annotation: hello-override-world
      labels:
        selector: defaults-deployment-web
        app: web
        chart: defaults
        chartVersion: 1.0.0
        team: cool-team
        testOverrideLabel: hello-override-world
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: "test-deployments"
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: "test-deployments"
      serviceAccountName: test-deployments
      automountServiceAccountToken: true
      tolerations:
        - key: "spot"
          operator: "Exists"
          effect: "NoSchedule"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        - name: app
          image: docker.io/image:abcd1234
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: false
          env:
            - name: RAILS_ENV
              value: "staging"
          envFrom:
            - secretRef:
                name: test-deployments
          livenessProbe:
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 5
            successThreshold: 1
            httpGet:
              path: /
              port: 8080
          resources:
            limits:
              memory: 256Mi
              ephemeral-storage: 200Mi
            requests:
              cpu: 250m
              memory: 256Mi
              ephemeral-storage: 200Mi
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: In
                    values:
                      - karpenter
---
# Source: defaults/templates/microservice.yaml.tpl
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: web
spec:
  minReplicas: 3
  maxReplicas: 6
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
