global:
  awsAccountId: "123456789"
  image: docker.io/image:abcd1234
  annotations:
    provi.repository: https://github.com/example/repo
  labels:
    team: cool-team
  appDomain: test-app-domain
  serviceAccount:
    name: test-deployments
  env:
    RAILS_ENV: staging

deployments:
  web:
    # default is RollingUpdate
    strategy: Recreate
    annotations:
      test.override.annotation: hello-override-world
    labels:
      testOverrideLabel: hello-override-world
    service:
      ports:
        http:
          port: 8080
          targetPort: 8080
          protocol: TCP
    serviceAccount:
      enabled: true
    replicas: 3
    autoscaling:
      minReplicas: 3
      maxReplicas: 6
    pod:
      affinity:
        type: karpenter
      topologySpreadConstraints:
        enabled: true
        matchLabels:
          app.kubernetes.io/name: test-deployments
      containers:
        app:
          envFrom:
            - secretRef:
                name: test-deployments
          resources:
            requests:
              memory: 256Mi
              cpu: 250m
              ephemeral-storage: 200Mi
            limits:
              memory: 256Mi
              ephemeral-storage: 200Mi
          livenessProbe:
            httpGet:
              path: /
              port: 8080
          readinessProbe:
            disabled: true
      tolerations:
        - spot

secrets:
  mycoolservice:
    k8sSecretName: mycoolservice
    awsSecretName: mycoolservice
    namespace: mycoolservice
    refreshTime: "1m"
    refreshInterval: "1h"
    secretStoreRef:
      name: "aws-store"
    secretKeys:
      - MY_COOL_SECRET_1
      - MY_COOL_SECRET_2
      - MY_COOL_SECRET_3
  mycooldb:
    k8sSecretName: mycooldb
    awsSecretName: 'rds!cluster-1a123b45-6c78-901d-e234-f5678901a23b'
    namespace: mycoolservice
    refreshTime: "1m"
    refreshInterval: "1h"
    secretStoreRef:
      name: "aws-store"
    secretKeys:
      - username
      - password
